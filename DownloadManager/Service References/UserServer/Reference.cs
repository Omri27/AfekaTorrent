//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DownloadManager.UserServer {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserServer.UserService")]
    public interface UserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/AddUser", ReplyAction="http://tempuri.org/UserService/AddUserResponse")]
        void AddUser(Entities.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/Login", ReplyAction="http://tempuri.org/UserService/LoginResponse")]
        Entities.User Login(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/GetAllUsers", ReplyAction="http://tempuri.org/UserService/GetAllUsersResponse")]
        Entities.User[] GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/DeleteUser", ReplyAction="http://tempuri.org/UserService/DeleteUserResponse")]
        void DeleteUser(System.Guid UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/GetUser", ReplyAction="http://tempuri.org/UserService/GetUserResponse")]
        Entities.User GetUser(System.Guid UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/EditUser", ReplyAction="http://tempuri.org/UserService/EditUserResponse")]
        void EditUser(Entities.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/GetUsersCount", ReplyAction="http://tempuri.org/UserService/GetUsersCountResponse")]
        int GetUsersCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/UpdateFolders", ReplyAction="http://tempuri.org/UserService/UpdateFoldersResponse")]
        void UpdateFolders(string download, string shared, System.Guid UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/Logout", ReplyAction="http://tempuri.org/UserService/LogoutResponse")]
        void Logout(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UserService/GetActiveUsersCount", ReplyAction="http://tempuri.org/UserService/GetActiveUsersCountResponse")]
        int GetActiveUsersCount();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface UserServiceChannel : DownloadManager.UserServer.UserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<DownloadManager.UserServer.UserService>, DownloadManager.UserServer.UserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddUser(Entities.User user) {
            base.Channel.AddUser(user);
        }
        
        public Entities.User Login(string userName, string password) {
            return base.Channel.Login(userName, password);
        }
        
        public Entities.User[] GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public void DeleteUser(System.Guid UserID) {
            base.Channel.DeleteUser(UserID);
        }
        
        public Entities.User GetUser(System.Guid UserID) {
            return base.Channel.GetUser(UserID);
        }
        
        public void EditUser(Entities.User user) {
            base.Channel.EditUser(user);
        }
        
        public int GetUsersCount() {
            return base.Channel.GetUsersCount();
        }
        
        public void UpdateFolders(string download, string shared, System.Guid UserId) {
            base.Channel.UpdateFolders(download, shared, UserId);
        }
        
        public void Logout(System.Guid userId) {
            base.Channel.Logout(userId);
        }
        
        public int GetActiveUsersCount() {
            return base.Channel.GetActiveUsersCount();
        }
    }
}
